# vim: set syntax=nu :

use std/util "path add"

# Config
$env.config.shell_integration.osc133 = false # Disable OSC133 to fix https://github.com/nushell/nushell/issues/5585
$env.config.buffer_editor = 'nvim' # Set editor
$env.config.show_banner = false # Disable banner

$env.PAGER = 'moar'
$env.EDITOR = $env.config.buffer_editor
$env.LOCAL_BIN_PATH = $env.HOME | path join '.local/bin'; path add $env.LOCAL_BIN_PATH

# XDG
$env.XDG_CONFIG_HOME = $env.HOME | path join ".config"
$env.XDG_CACHE_HOME = $env.HOME | path join ".cache"
$env.XDG_DATA_HOME = $env.HOME | path join ".local/share"
$env.XDG_STATE_HOME = $env.HOME | path join ".local/state"

# Rust
$env.RUST_SRC_PATH = ^rustc --print sysroot | str trim | path join 'lib/rustlib/src/rust/src'
$env.CARGO_BIN_PATH = $env.HOME | path join 'cargo/bin'; path add $env.CARGO_BIN_PATH

# Golang
$env.GOPATH = $env.HOME | path join 'go'
$env.GOBIN = $env.GOPATH | path join 'bin'; path add $env.GOBIN

# Dotnet related
$env.DOTNET_BIN_PATH = $env.HOME | path join '.dotnet/tools'; path add $env.DOTNET_BIN_PATH
$env.NUGET_CREDENTIALPROVIDER_MSAL_ENABLED = true
$env.NUGET_CREDENTIALPROVIDER_FORCE_CANSHOWDIALOG_TO = true

# Carapace
$env.CARAPACE_MATCH = 'CASE_INSENSITIVE'

# bkt
$env.BKT_CACHE_DIR = $env.XDG_CACHE_HOME

# fzf
$env.FZF_DEFAULT_COMMAND = 'fd -It f'

# Aliases
alias cm = chezmoi
alias n = nvim
alias la = ls -a
alias k = kubectl
alias g = git
alias tf = terraform
alias wcopy = win32yank.exe -i
alias wpaste = win32yank.exe -o

def --wrapped hx [...args] {
    path add ($env.XDG_DATA_HOME | path join "nvim/mason/bin")
    ^hx ...$args
}

def --env cdg [] {
    cd (git root)
}

# Source custom modules
use modules/pr

{{- if and (eq .chezmoi.os "linux") (.chezmoi.kernel.osrelease | lower | contains "microsoft") }}
# Source WSL related config
source ./wsl.nu
{{- end }}
