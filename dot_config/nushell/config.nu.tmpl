use std/util "path add"

{{- if .is_wsl }}
use modules/wsl *
{{- else if .is_windows }}
use modules/windows *
{{- end }}

# Config
$env.config.shell_integration.osc133 = false # Disable OSC133 to fix https://github.com/nushell/nushell/issues/5585
$env.config.buffer_editor = 'nvim' # Set editor
$env.config.show_banner = false # Disable banner

# $env.PAGER = 'moar'
$env.EDITOR = $env.config.buffer_editor
$env.LOCAL_BIN_PATH = $env.HOME | path join .local bin; path add $env.LOCAL_BIN_PATH

# XDG
$env.XDG_CONFIG_HOME = $env.HOME | path join .config
$env.XDG_CACHE_HOME = $env.HOME | path join .cache
$env.XDG_DATA_HOME = $env.HOME | path join .local share
$env.XDG_STATE_HOME = $env.HOME | path join .local state

# Rust
$env.RUST_SRC_PATH = ^rustc --print sysroot | str trim | path join lib rustlib src rust src
$env.CARGO_BIN_PATH = $env.HOME | path join .cargo bin; path add $env.CARGO_BIN_PATH

# Golang
$env.GOPATH = $env.HOME | path join go
$env.GOBIN = $env.GOPATH | path join bin; path add $env.GOBIN

# Dotnet related
$env.DOTNET_BIN_PATH = $env.HOME | path join .dotnet tools; path add $env.DOTNET_BIN_PATH
$env.DOTNET_CLI_TELEMETRY_OPTOUT = true
$env.NUGET_CREDENTIALPROVIDER_MSAL_ENABLED = true
$env.NUGET_CREDENTIALPROVIDER_FORCE_CANSHOWDIALOG_TO = true

# Carapace
$env.CARAPACE_MATCH = 'CASE_INSENSITIVE'

# bkt
$env.BKT_CACHE_DIR = $env.XDG_CACHE_HOME

# fzf
$env.FZF_DEFAULT_COMMAND = 'fd -It f'

# Aliases
alias g = git
alias k = kubectl
alias la = ls -a
alias n = nvim
alias tf = terraform
alias lg = lazygit
alias j = jj

# Chezmoi alias
alias cm = chezmoi
alias "cm g" = chezmoi git
alias "cm a" = chezmoi apply
alias "cm d" = chezmoi diff
alias "cm s" = chezmoi status
alias "cm e" = chezmoi edit --apply
alias "cm u" = chezmoi update

def --wrapped hx [...args] {
    path add ($env.XDG_DATA_HOME | path join nvim mason bin)
    ^hx ...$args
}

def --env cdg [] {
    cd (git root)
}

# Source custom modules
use modules/completions
use modules/pr
use modules/neko

# Eliminate duplicated path entries
$env.PATH = $env.PATH | path parse | path join | uniq
